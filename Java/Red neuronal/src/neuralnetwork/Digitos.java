package neuralnetwork;
public class Digitos {
    //Matrices de 6x7 de los digitos 1,2,3,4,5,6,7,8,9,0.
    private static final int NUM_1[][][] = {
        {   {0,0,1,1,0,0},
            {0,1,0,1,0,0},
            {1,0,0,1,0,0},
            {0,0,0,1,0,0},
            {0,0,0,1,0,0},
            {0,0,0,1,0,0},
            {1,1,1,1,1,1}},
        
        {   {0,0,1,1,0,0},
            {0,0,1,1,0,0},
            {0,0,1,1,0,0},
            {0,0,1,1,0,0},
            {0,0,1,1,0,0},
            {0,0,1,1,0,0},
            {0,0,1,1,0,0}},
        
        {   {0,0,1,1,1,0},
            {0,1,1,1,1,0},
            {1,1,0,1,1,0},
            {1,0,0,1,1,0},
            {0,0,0,1,1,0},
            {0,0,0,1,1,0},
            {0,0,0,1,1,0}},
        
        {   {0,0,1,1,1,0},
            {0,1,1,1,1,0},
            {1,1,0,1,1,0},
            {1,0,0,1,1,0},
            {0,0,0,1,1,0},
            {1,1,1,1,1,1},
            {1,1,1,1,1,1}},
        
        {   {0,0,0,0,0,0},
            {0,0,1,1,0,0},
            {0,1,0,1,0,0},
            {0,0,0,1,0,0},
            {0,0,0,1,0,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,1,1,0,0,0},
            {1,0,1,0,0,0},
            {0,0,1,0,0,0},
            {0,0,1,0,0,0},
            {0,0,1,0,0,0},
            {1,1,1,1,0,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,0,1,1,0},
            {0,0,1,0,1,0},
            {0,0,0,0,1,0},
            {0,0,0,0,1,0},
            {0,0,0,0,1,0},
            {0,0,1,1,1,1},
            {0,0,0,0,0,0}}};
    
    private static final int NUM_2[][][] = {
        {   {0,0,1,1,1,0},
            {0,1,0,0,0,1},
            {1,0,0,0,0,1},
            {0,0,0,1,1,0},
            {0,1,1,0,0,0},
            {1,0,0,0,0,0},
            {1,1,1,1,1,1}},
        
        {   {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {0,0,0,0,1,0},
            {0,0,0,1,0,0},
            {0,0,1,0,0,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,0,0,0,0},        
            {0,1,1,0,0,0},
            {1,0,0,1,0,0},
            {0,0,0,1,0,0},
            {0,0,1,0,0,0},
            {0,1,0,0,0,0},
            {1,1,1,1,0,0}},
        
        {   {0,0,0,0,0,0},        
            {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {0,0,0,0,1,0},
            {0,0,0,1,0,0},
            {0,0,1,0,0,0},
            {0,1,1,1,1,0}},
        
        {   {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {1,1,1,1,1,1},
            {1,0,0,0,0,0},
            {1,0,0,0,0,0},
            {1,1,1,1,1,1}},
        
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,0},
            {0,0,0,0,1,0},
            {0,1,1,1,1,0},
            {0,1,0,0,0,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,1,1,1,1},
            {0,0,1,0,0,0},
            {0,0,1,1,1,1},
            {0,0,0,0,0,0},
            {0,0,0,0,0,0}}};
    
    private static final int NUM_3[][][] = {
        {   {0,1,1,1,1,0},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {0,0,1,1,1,0},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {0,1,1,1,1,0}},
        
        {   {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {1,1,1,1,1,1}},
        
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,0}},
        
        {   {0,0,0,0,0,0},
            {1,1,1,1,0,0},
            {1,0,0,1,0,0},
            {0,0,1,1,0,0},
            {1,0,0,1,0,0},
            {1,1,1,1,0,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,0,0,0,0},
            {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {0,0,0,1,1,0},
            {0,1,0,0,1,0},
            {0,0,1,1,0,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,0},
            {0,0,0,0,1,0},
            {0,0,1,1,1,0},
            {0,0,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,1,1,1,1,0},
            {0,0,0,0,1,0},
            {0,0,0,0,1,0},
            {0,0,1,1,1,0},
            {0,0,0,0,1,0},
            {0,0,0,0,1,0},
            {0,1,1,1,1,0}}};
    
    private static final int NUM_4[][][] = {
        {   {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1}},
        
        {   {0,0,0,1,1,1},
            {0,0,1,0,0,1},
            {0,1,0,0,0,1},
            {1,0,0,0,0,1},
            {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1}},
        
        {   {1,1,0,0,1,1},
            {1,1,0,0,1,1},
            {1,1,0,0,1,1},
            {1,1,1,1,1,1},
            {1,1,1,1,1,1},
            {0,0,0,0,1,1},
            {0,0,0,0,1,1}},
        
        {   {0,1,0,0,1,0},
            {0,1,0,0,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,1,0},
            {0,0,0,0,1,0},
            {0,0,0,0,1,0}},
        
        {   {0,0,0,1,1,0},
            {0,0,1,0,1,0},
            {0,1,0,0,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,1,0},
            {0,0,0,0,1,0}},
        
        {   {1,0,0,1,0,0},
            {1,0,0,1,0,0},
            {1,0,0,1,0,0},
            {1,1,1,1,0,0},
            {0,0,0,1,0,0},
            {0,0,0,1,0,0},
            {0,0,0,1,0,0}},
        
        {   {0,0,1,0,0,1},
            {0,0,1,0,0,1},
            {0,0,1,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1}}};
    
    private static final int NUM_5[][][] = {
        {   {1,1,1,1,1,1},
            {1,0,0,0,0,0},
            {1,0,0,0,0,0},
            {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {1,1,1,1,1,1}},
        
        {   {1,1,1,1,1,1},
            {1,1,0,0,0,0},
            {1,1,1,0,0,0},
            {1,1,1,1,1,1},
            {0,0,0,0,1,1},
            {0,0,0,1,1,1},
            {1,1,1,1,1,1}},
        
        {   {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {0,1,1,0,0,1},
            {0,0,1,0,0,0},
            {1,0,0,1,1,0},
            {0,1,0,0,1,0},
            {0,0,1,1,0,0}},
        
        {   {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {0,1,1,0,0,0},
            {0,0,1,0,0,0},
            {0,0,0,1,1,0},
            {0,1,0,0,1,0},
            {0,0,1,1,0,0}},
        
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,0},
            {0,1,0,0,0,0},
            {0,1,1,1,1,0},
            {0,0,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,1,1,1,1,0},
            {0,1,0,0,0,0},
            {0,1,1,1,1,0},
            {0,0,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,1,1,1,1},
            {0,0,1,0,0,0},
            {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,0},
            {0,0,0,0,0,0}}};
    
    private static final int NUM_6[][][] = {
        {   {1,1,1,1,1,1},
            {1,0,0,0,0,0},
            {1,0,0,0,0,0},
            {1,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,1,1,1,1,1}},
        
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,0},
            {0,1,0,0,0,0},
            {0,1,1,1,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {1,0,0,0,0,1},
            {1,0,1,1,0,0},
            {1,1,0,0,1,0},
            {1,0,0,0,0,1},
            {0,1,1,1,1,0}},
        
        {   {1,1,1,1,1,1},
            {1,1,1,1,1,1},
            {1,1,0,0,1,1},
            {1,1,0,0,0,0},
            {1,1,1,1,1,1},
            {1,1,0,0,1,1},
            {1,1,1,1,1,1}},
        
        {   {1,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,0},
            {1,1,1,1,1,1},
            {1,1,0,0,1,1},
            {1,1,1,1,1,1}},
        
        {   {0,1,1,1,1,0},
            {0,1,0,0,0,0},
            {0,1,1,1,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0},
            {0,0,0,0,0,0}},
        
        {   {1,1,1,1,1,1},
            {1,0,0,0,0,0},
            {1,0,0,0,0,0},
            {1,0,0,0,0,0},
            {1,1,1,1,1,1},
            {1,1,0,0,1,1},
            {1,1,1,1,1,1}}};
    
    private static final int NUM_7[][][] = {
        {    {1,1,1,1,1,1},
            {1,1,1,1,1,1},
            {0,0,0,0,1,1},
            {0,0,0,0,1,1},
            {0,0,0,0,1,1},
            {0,0,0,0,1,1},
            {0,0,0,0,1,1}},
        
        {   {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1}},
        
        {   {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,1,0},
            {0,0,0,1,0,0},
            {0,0,1,0,0,0},
            {0,1,0,0,0,0},
            {1,0,0,0,0,0}},
        
        {   {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1}},
        
        {   {1,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,1,1,1,1,0},
            {0,0,0,1,0,0},
            {0,0,1,0,0,0},
            {0,1,0,0,0,0},
            {1,0,0,0,0,0}},
        
        {   {1,1,1,1,1,1},
            {1,1,1,1,1,1},
            {0,0,0,0,1,1},
            {0,0,1,1,1,1},
            {0,0,1,1,1,1},
            {0,0,0,0,1,1},
            {0,0,0,0,1,1}},
        
        {   {0,0,0,0,0,0},
            {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,0}}};
    
    private static final int NUM_8[][][] = {
        {   {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {1,0,0,0,0,1},
            {0,1,1,1,1,0},
            {0,1,1,1,1,0},
            {1,0,0,0,0,1},
            {0,1,1,1,1,0}},
        
        {   {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {1,0,0,0,0,1},
            {0,1,1,1,1,0},
            {1,0,0,0,0,1},
            {0,1,0,0,1,0},
            {0,0,1,1,0,0}},
        
        {   {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {0,1,0,0,1,0},
            {0,0,1,1,0,0},
            {0,1,0,0,1,0},
            {0,1,0,0,1,0},
            {0,0,1,1,0,0}},
        
        {   {1,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,1,1,1,1,1}},
        
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,1,1,1,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,1,1,1,1},
            {0,0,1,0,0,1},
            {0,0,1,1,1,1},
            {0,0,1,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,0},
            {0,0,0,0,0,0}}};
    
    private static final int NUM_9[][][] = {
        {   {0,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1}},
        
        {   {0,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,1,1,1,1,1}},
        
        {   {0,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {1,1,1,1,1,1}},
        
        {   {0,1,1,1,1,1},
            {0,1,0,0,0,1},
            {0,1,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1},
            {0,0,0,0,0,1}},
        
        {   {0,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,1,0},
            {0,0,0,1,0,0}},
        
        {   {0,0,1,1,1,1},
            {0,0,1,0,0,1},
            {0,0,1,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,0,0,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,1,1,1,1},
            {0,0,1,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,1},
            {0,0,1,1,1,1},
            {0,0,0,0,0,0},
            {0,0,0,0,0,0}}};
    
        private static final int NUM_0[][][] = {
        {   {1,1,1,1,1,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,0,0,0,0,1},
            {1,1,1,1,1,1}},
            
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,0},
            {0,1,0,0,1,0},
            {0,1,0,0,1,0},
            {0,1,0,0,1,0},
            {0,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,1,1,1,1,1},
            {0,1,0,0,0,1},
            {0,1,0,0,0,1},
            {0,1,0,0,0,1},
            {0,1,0,0,0,1},
            {0,1,1,1,1,1},
            {0,0,0,0,0,0}},
        
        {   {1,1,1,1,1,0},
            {1,0,0,0,1,0},
            {1,0,0,0,1,0},
            {1,0,0,0,1,0},
            {1,0,0,0,1,0},
            {1,1,1,1,1,0},
            {0,0,0,0,0,0}},
        
        {   {0,0,0,0,0,0},
            {1,1,1,1,1,0},
            {1,0,0,0,1,0},
            {1,0,0,0,1,0},
            {1,0,0,0,1,0},
            {1,0,0,0,1,0},
            {1,1,1,1,1,0}},
        
        {   {0,0,0,0,0,0},
            {0,1,1,1,1,1},
            {0,1,0,0,0,1},
            {0,1,0,0,0,1},
            {0,1,0,0,0,1},
            {0,1,0,0,0,1},
            {0,1,1,1,1,1}},
        
        {   {0,0,0,0,0,0},
            {0,0,1,1,1,0},
            {0,0,1,0,1,0},
            {0,0,1,0,1,0},
            {0,0,1,0,1,0},
            {0,0,1,1,1,0},
            {0,0,0,0,0,0}}};
    
    //Lista de respuestas para la busqueda de cada digito
        
    private static final int TARGET_LIST[][] = {
        {1,0,0,0,0,0,0,0,0,0}, //9
        {0,1,0,0,0,0,0,0,0,0}, //8
        {0,0,1,0,0,0,0,0,0,0}, //7
        {0,0,0,1,0,0,0,0,0,0}, //6
        {0,0,0,0,1,0,0,0,0,0}, //5
        {0,0,0,0,0,1,0,0,0,0}, //4
        {0,0,0,0,0,0,1,0,0,0}, //3
        {0,0,0,0,0,0,0,1,0,0}, //2
        {0,0,0,0,0,0,0,0,1,0}, //1
        {0,0,0,0,0,0,0,0,0,1}, //0
    };
    
    
    public int[] getDigitVector(int digit, int representation) {
        return matrix2Vector(digit, representation);
    }
        //esto estaba comentado
    public Object[][] getDigitMatrix(int digit) {
        return matrixSelector(digit);
    }
    
    public int[][] getTargetList() {
        return TARGET_LIST;
    }
    
    private int[] matrix2Vector(int digit, int rep) {
        int[] vector = new int[42];
        int vectorIndex = 0;
        switch(digit){
            case 1:
                for (int i=0; i<NUM_1[rep].length; i++){
                    for (int j=0; j<NUM_1[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_1[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 2:
                for (int i=0; i<NUM_2[rep].length; i++){
                    for (int j=0; j<NUM_2[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_2[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 3:
                for (int i=0; i<NUM_3[rep].length; i++){
                    for (int j=0; j<NUM_3[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_3[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 4:
                for (int i=0; i<NUM_4[rep].length; i++){
                    for (int j=0; j<NUM_4[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_4[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 5:
                for (int i=0; i<NUM_5[rep].length; i++){
                    for (int j=0; j<NUM_5[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_5[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 6:
                for (int i=0; i<NUM_6[rep].length; i++){
                    for (int j=0; j<NUM_6[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_6[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 7:
                for (int i=0; i<NUM_7[rep].length; i++){
                    for (int j=0; j<NUM_7[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_7[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 8:
                for (int i=0; i<NUM_8[rep].length; i++){
                    for (int j=0; j<NUM_8[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_8[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            case 9:
                for (int i=0; i<NUM_9[rep].length; i++){
                    for (int j=0; j<NUM_9[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_9[rep][i][j];
                        vectorIndex++;
                    }
                }
            case 0:
                for (int i=0; i<NUM_0[rep].length; i++){
                    for (int j=0; j<NUM_0[rep][i].length; j++) {
                        vector[vectorIndex] = NUM_0[rep][i][j];
                        vectorIndex++;
                    }
                }
                break;
            default:
                break;
        }
        
        return vector;
    }
    
    //esto desde aquie staba comentado
    
    private Object[][] matrixSelector(int digit) {
        Object[][] matrix = new Object[7][6];
        
        int[][][] cero = {{{0}}};
        
        switch(digit){
            case 1:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_1[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_1[i][j];
                    }
                }
                break;
            case 2:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_2[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_2[i][j];
                    }
                }
                break;
            case 3:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_3[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_3[i][j];
                    }
                }
                break;
            case 4:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_4[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_4[i][j];
                    }
                }
                break;
            case 5:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_5[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_5[i][j];
                    }
                }
                break;
            case 6:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_6[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_6[i][j];
                    }
                }
                break;
            case 7:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_7[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_7[i][j];
                    }
                }
                break;
            case 8:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_8[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_8[i][j];
                    }
                }
                break;
            case 9:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_9[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_9[i][j];
                    }
                }
                break;
            case 0:
                for (int i=0; i<7; i++){
                    for (int j=0; j<6; j++) {
                        if (NUM_0[i][j] == cero[0][0]) {
                            matrix[i][j] = "";
                        } else matrix[i][j] = NUM_0[i][j];
                    }
                }
                break;
            default:
                break;
        }
        return matrix;
    }

}